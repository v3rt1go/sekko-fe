{"version":3,"sources":["main.scss","../template/styles/sass/libs/_skel.scss","../template/styles/sass/libs/_mixins.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["@import '../template/styles/sass/libs/vars';\r\n@import '../template/styles/sass/libs/functions';\r\n@import '../template/styles/sass/libs/mixins';\r\n@import '../template/styles/sass/libs/skel';\r\n\r\n@include skel-breakpoints((\r\n  xlarge: '(max-width: 1680px)',\r\n  large: '(max-width: 1280px)',\r\n  medium: '(max-width: 980px)',\r\n  small: '(max-width: 736px)',\r\n  xsmall: '(max-width: 640px)',\r\n  xxsmall: '(max-width: 360px)'\r\n));\r\n\r\n/* variables */\r\n\r\n$red: #CC1F14;\r\n$green: #A4B212;\r\n$grey: #77848D;\r\n\r\n/* Header */\r\n\r\n#header {\r\n  h1 {\r\n    opacity: 1;\r\n    font-family: Raleway, Helvetica, sans-serif;\r\n    font-size: 1em;\r\n    font-weight: 200;\r\n    letter-spacing: 0.17em;\r\n    line-height: 2;\r\n    text-transform: uppercase;\r\n  }\r\n  h2 {\r\n    @include vendor('transition', (\r\n      'opacity #{_duration(transition)} ease-in-out',\r\n      'visibility #{_duration(transition)}'\r\n\t\t));\r\n    border-bottom: 0;\r\n    font-size: 0.8em;\r\n    margin-bottom: 0;\r\n    opacity: 1;\r\n    visibility: visible;\r\n\r\n    a {\r\n      border: 0;\r\n    }\r\n  }\r\n  .logo {\r\n    @include vendor('transition', (\r\n\t\t\t\t'opacity #{_duration(transition)} ease-in-out',\r\n\t\t\t\t'display #{_duration(transition)}'\r\n\t\t\t));\r\n    opacity: 0;\r\n    display: none;\r\n    padding-top: 0.7em;\r\n\r\n    hr {\r\n      margin: 0;\r\n      margin-top: 1em;\r\n      width: 100%;\r\n      position: relative;\r\n      overflow: visible;\r\n    }\r\n\r\n    .contact {\r\n      float: right;\r\n      margin-top: -2em;\r\n      p {\r\n        opacity: 1;\r\n        font-family: Raleway, Helvetica, sans-serif;\r\n        font-size: 1em;\r\n        font-weight: 200;\r\n        letter-spacing: 0.17em;\r\n        line-height: 2;\r\n        text-transform: uppercase;\r\n      }\r\n      a {\r\n        text-transform: none;\r\n        border-bottom: none;\r\n        &:hover {\r\n          border-bottom: dotted 1px rgba(255, 255, 255, 0.35);\r\n        }\r\n      }\r\n\r\n      @include breakpoint(small) {\r\n        span {\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  &.alt {\r\n    h1 {\r\n      opacity: 1;\r\n      visibility: visible;\r\n    }\r\n    h2 {\r\n      opacity: 0;\r\n      visibility: hidden;\r\n    }\r\n    .logo {\r\n      display: block;\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @include breakpoint(small) {\r\n    height: 3.5em;\r\n    line-height: 3.5em;\r\n  }\r\n}\r\n\r\n/* Menu */\r\n\r\n#menu .inner {\r\n  background-color: $grey;\r\n  .links li a:hover {\r\n    background-color: $red;\r\n  }\r\n}\r\n\r\n/* Banner */\r\n\r\n#banner {\r\n  h2 {\r\n    text-align: right;\r\n    text-transform: none;\r\n  }\r\n  p {\r\n    text-transform: none;\r\n    text-align: justify;\r\n  }\r\n  @include breakpoint(large) {\r\n    @include padding(10em, 0, (0, 0, _size(wrapper-edges, large) * -0.5, 0));\r\n  }\r\n\r\n  @include breakpoint(medium) {\r\n\t\t\t@include padding(12em, 3em, (0, 0, _size(wrapper-edges, medium) * 0.5, 0));\r\n  }\r\n\r\n  @include breakpoint(small) {\r\n    @include padding(5em, 2em, (0, 0, _size(wrapper-edges, small) * 0.5, 0));\r\n    h2, p {\r\n      visibility: hidden;\r\n    }\r\n    .subheading, .cta {\r\n      visibility: visible;\r\n      font-size: 1em;\r\n      font-weight: bold;\r\n      color: white;\r\n    }\r\n  }\r\n}\r\n\r\n/* Wrapper */\r\n\r\n/// Sets the colors of the wrapper's top/bottom edges.\r\n/// @param {string} $color Color.\r\n@mixin wrapper-custom-edges-color($color: black) {\r\n  &:before, &:after {\r\n    background-image: svg-url('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\"><polygon points=\"0,100 100,0 100,100\" style=\"fill:#{$color};\" /></svg>');\r\n  }\r\n}\r\n\r\n.wrapper.spotlight.style1 {\r\n  background-color: $green;\r\n  @include wrapper-custom-edges-color($green);\r\n}\r\n\r\n.wrapper.spotlight.style2 {\r\n  background-color: $grey;\r\n  @include wrapper-custom-edges-color($grey);\r\n}\r\n\r\n.wrapper.spotlight.style3 {\r\n  background-color: $red;\r\n  @include wrapper-custom-edges-color($red);\r\n}\r\n\r\n/* Fetaures */\r\n.features {\r\n  article {\r\n    width: calc(33% - #{_size(section-spacing, large) * 0.5});\r\n\r\n    &:nth-child(1n), &:nth-child(2n) {\r\n      margin-right: auto;\r\n    }\r\n    &:nth-child(3n) {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @include breakpoint(medium) {\r\n\t\t\tarticle {\r\n\t\t\t\tmargin: (_size(section-spacing, medium) * 0.5) _size(section-spacing, medium) (_size(section-spacing, medium) * 0.5) 0;\r\n\t\t\t\twidth: calc(50% - #{_size(section-spacing, medium) * 0.5});\r\n\r\n        &:nth-child(1n), &:nth-child(3n) {\r\n          margin-right: auto;\r\n        }\r\n        &:nth-child(2n) {\r\n          margin-right: 0;\r\n        }\r\n\r\n        p {\r\n          text-align: justify;\r\n        }\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@include breakpoint(small) {\r\n\t\t\tarticle {\r\n\t\t\t\t@include padding(1.5em, 1.5em);\r\n\t\t\t\tmargin: (_size(section-spacing, small) * 0.5) _size(section-spacing, small) (_size(section-spacing, small) * 0.5) 0;\r\n\t\t\t\twidth: calc(50% - #{_size(section-spacing, small) * 0.5} - 1px);\r\n\r\n\t\t\t\t.image {\r\n\t\t\t\t\tmargin-bottom: 1.5em;\r\n\t\t\t\t\tmargin-left: -1.5em;\r\n\t\t\t\t\tmargin-top: -1.5em;\r\n\t\t\t\t\twidth: calc(100% + #{3em});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@include breakpoint(xsmall) {\r\n\t\t\tdisplay: block;\r\n\r\n\t\t\tarticle {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmargin: 0 0 _size(element-margin) 0 !important;\r\n\t\t\t}\r\n\t\t}\r\n}\r\n\r\n/* Footer */\r\n#footer {\r\n  .inner {\r\n    .success, .error {\r\n      padding: 0.5em;\r\n      background-color: $green;\r\n      border-radius: 5px;\r\n      color: white;\r\n      text-align: center;\r\n      vertical-align: baseline;\r\n      margin: 0 3em 0 0;\r\n      width: calc(50% - 1.5em);\r\n    }\r\n    .error {\r\n      background-color: $red;\r\n    }\r\n  }\r\n}\r\n\r\n/* Images */\r\n\r\n.image.img-logo img {\r\n  float: none;\r\n  max-width: 40%;\r\n  margin-top: 0.8em;\r\n}\r\n\r\n.img-header img {\r\n  margin-top: 0.5em;\r\n  max-width: 30%;\r\n}\r\n\r\n.image-icon img {\r\n  float: none;\r\n  max-width: 60%;\r\n  padding: 2%;\r\n}\r\n\r\n.image-icon.circle img {\r\n  border: 1px solid white;\r\n  border-radius: 100%;\r\n}\r\n\r\n/* General */\r\n\r\n.hidden {\r\n  visibility: hidden;\r\n}\r\n\r\na.button {\r\n  padding: 0 2.25em;\r\n}\r\n\r\n.button.red, input[type=\"submit\"].button.red {\r\n  background-color: $red;\r\n  &:hover {\r\n    background-color: $green;\r\n  }\r\n}\r\n.button.green, input[type=\"submit\"].button.green {\r\n  background-color: $green;\r\n  &:hover {\r\n    background-color: $red;\r\n  }\r\n}\r\n.button.grey, input[type=\"submit\"].button.grey {\r\n  background-color: $grey;\r\n  &:hover {\r\n    background-color: $red;\r\n  }\r\n}\r\n\r\n.subheading {\r\n  opacity: 1;\r\n  font-family: Raleway, Helvetica, sans-serif;\r\n  font-size: 1em;\r\n  font-weight: 200;\r\n  letter-spacing: 0.17em;\r\n  line-height: 2;\r\n  text-align: justify;\r\n}\r\n\r\n/* Animations */\r\n\r\n.delayed {\r\n  -webkit-animation-delay: 2s;\r\n  animation-delay: 2s;\r\n}\r\n\r\n.fadeInUpBig, .fadeInLeftBig, .fadeInRightBig {\r\n  visibility: visible;\r\n}","// skel.scss v3.0.0 | (c) n33 | skel.io | MIT licensed */\r\n\r\n// Vars.\r\n\r\n\t/// Breakpoints.\r\n\t/// @var {list}\r\n\t$breakpoints: () !global;\r\n\r\n\t/// Vendor prefixes.\r\n\t/// @var {list}\r\n\t$vendor-prefixes: (\r\n\t\t'-moz-',\r\n\t\t'-webkit-',\r\n\t\t'-ms-',\r\n\t\t''\r\n\t);\r\n\r\n\t/// Properties that should be vendorized.\r\n\t/// @var {list}\r\n\t$vendor-properties: (\r\n\t\t'align-content',\r\n\t\t'align-items',\r\n\t\t'align-self',\r\n\t\t'animation',\r\n\t\t'animation-delay',\r\n\t\t'animation-direction',\r\n\t\t'animation-duration',\r\n\t\t'animation-fill-mode',\r\n\t\t'animation-iteration-count',\r\n\t\t'animation-name',\r\n\t\t'animation-play-state',\r\n\t\t'animation-timing-function',\r\n\t\t'appearance',\r\n\t\t'backface-visibility',\r\n\t\t'box-sizing',\r\n\t\t'filter',\r\n\t\t'flex',\r\n\t\t'flex-basis',\r\n\t\t'flex-direction',\r\n\t\t'flex-flow',\r\n\t\t'flex-grow',\r\n\t\t'flex-shrink',\r\n\t\t'flex-wrap',\r\n\t\t'justify-content',\r\n\t\t'order',\r\n\t\t'perspective',\r\n\t\t'pointer-events',\r\n\t\t'transform',\r\n\t\t'transform-origin',\r\n\t\t'transform-style',\r\n\t\t'transition',\r\n\t\t'transition-delay',\r\n\t\t'transition-duration',\r\n\t\t'transition-property',\r\n\t\t'transition-timing-function'\r\n\t);\r\n\r\n\t/// Values that should be vendorized.\r\n\t/// @var {list}\r\n\t$vendor-values: (\r\n\t\t'filter',\r\n\t\t'flex',\r\n\t\t'linear-gradient',\r\n\t\t'radial-gradient',\r\n\t\t'transform'\r\n\t);\r\n\r\n// Functions.\r\n\r\n\t/// Removes a specific item from a list.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {list} $list List.\r\n\t/// @param {integer} $index Index.\r\n\t/// @return {list} Updated list.\r\n\t@function remove-nth($list, $index) {\r\n\r\n\t\t$result: null;\r\n\r\n\t\t@if type-of($index) != number {\r\n\t\t\t@warn \"$index: #{quote($index)} is not a number for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else if $index == 0 {\r\n\t\t\t@warn \"List index 0 must be a non-zero integer for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else if abs($index) > length($list) {\r\n\t\t\t@warn \"List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else {\r\n\r\n\t\t\t$result: ();\r\n\t\t\t$index: if($index < 0, length($list) + $index + 1, $index);\r\n\r\n\t\t\t@for $i from 1 through length($list) {\r\n\r\n\t\t\t\t@if $i != $index {\r\n\t\t\t\t\t$result: append($result, nth($list, $i));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t@return $result;\r\n\r\n\t}\r\n\r\n\t/// Replaces a substring within another string.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {string} $string String.\r\n\t/// @param {string} $search Substring.\r\n\t/// @param {string} $replace Replacement.\r\n\t/// @return {string} Updated string.\r\n\t@function str-replace($string, $search, $replace: '') {\r\n\r\n\t\t$index: str-index($string, $search);\r\n\r\n\t\t@if $index {\r\n\t\t\t@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\r\n\t\t}\r\n\r\n\t\t@return $string;\r\n\r\n\t}\r\n\r\n\t/// Replaces a substring within each string in a list.\r\n\t/// @param {list} $strings List of strings.\r\n\t/// @param {string} $search Substring.\r\n\t/// @param {string} $replace Replacement.\r\n\t/// @return {list} Updated list of strings.\r\n\t@function str-replace-all($strings, $search, $replace: '') {\r\n\r\n\t\t@each $string in $strings {\r\n\t\t\t$strings: set-nth($strings, index($strings, $string), str-replace($string, $search, $replace));\r\n\t\t}\r\n\r\n\t\t@return $strings;\r\n\r\n\t}\r\n\r\n\t/// Gets a value from a map.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {map} $map Map.\r\n\t/// @param {string} $keys Key(s).\r\n\t/// @return {string} Value.\r\n\t@function val($map, $keys...) {\r\n\r\n\t\t@if nth($keys, 1) == null {\r\n\t\t\t$keys: remove-nth($keys, 1);\r\n\t\t}\r\n\r\n\t\t@each $key in $keys {\r\n\t\t\t$map: map-get($map, $key);\r\n\t\t}\r\n\r\n\t\t@return $map;\r\n\r\n\t}\r\n\r\n// Mixins.\r\n\r\n\t/// Sets the global box model.\r\n\t/// @param {string} $model Model (default is content).\r\n\t@mixin boxModel($model: 'content') {\r\n\r\n\t\t$x: $model + '-box';\r\n\r\n\t\t*, *:before, *:after {\r\n\t\t\t-moz-box-sizing: #{$x};\r\n\t\t\t-webkit-box-sizing: #{$x};\r\n\t\t\tbox-sizing: #{$x};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in a @media block using a given breakpoint.\r\n\t/// @param {string} $breakpoint Breakpoint.\r\n\t/// @param {map} $queries Additional queries.\r\n\t@mixin breakpoint($breakpoint: null, $queries: null) {\r\n\r\n\t\t$query: 'screen';\r\n\r\n\t\t// Breakpoint.\r\n\t\t\t@if $breakpoint and map-has-key($breakpoints, $breakpoint) {\r\n\t\t\t\t$query: $query + ' and ' + map-get($breakpoints, $breakpoint);\r\n\t\t\t}\r\n\r\n\t\t// Queries.\r\n\t\t\t@if $queries {\r\n\t\t\t\t@each $k, $v in $queries {\r\n\t\t\t\t\t$query: $query + ' and (' + $k + ':' + $v + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n        @media #{$query} {\r\n            @content;\r\n        }\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in a @media block targeting a specific orientation.\r\n\t/// @param {string} $orientation Orientation.\r\n\t@mixin orientation($orientation) {\r\n\t\t@media screen and (orientation: #{$orientation}) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t/// Utility mixin for containers.\r\n\t/// @param {mixed} $width Width.\r\n\t@mixin containers($width) {\r\n\r\n\t\t// Locked?\r\n\t\t\t$lock: false;\r\n\r\n\t\t\t@if length($width) == 2 {\r\n\t\t\t\t$width: nth($width, 1);\r\n\t\t\t\t$lock: true;\r\n\t\t\t}\r\n\r\n\t\t// Modifiers.\r\n\t\t\t.container.\\31 25\\25\t\t{ width: 100%; max-width: $width * 1.25; min-width: $width; }\r\n\t\t\t.container.\\37 5\\25\t\t\t{ width: $width * 0.75; }\r\n\t\t\t.container.\\35 0\\25\t\t\t{ width: $width * 0.5; }\r\n\t\t\t.container.\\32 5\\25\t\t\t{ width: $width * 0.25; }\r\n\r\n\t\t// Main class.\r\n\t\t\t.container {\r\n\t\t\t\t@if $lock {\r\n\t\t\t\t\twidth: $width !important;\r\n\t\t\t\t}\r\n\t\t\t\t@else {\r\n\t\t\t\t\twidth: $width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t}\r\n\r\n\t/// Utility mixin for grid.\r\n\t/// @param {list} $gutters Column and row gutters (default is 40px).\r\n\t/// @param {string} $breakpointName Optional breakpoint name.\r\n\t@mixin grid($gutters: 40px, $breakpointName: null) {\r\n\r\n\t\t// Gutters.\r\n\t\t\t@include grid-gutters($gutters);\r\n\t\t\t@include grid-gutters($gutters, \\32 00\\25, 2);\r\n\t\t\t@include grid-gutters($gutters, \\31 50\\25, 1.5);\r\n\t\t\t@include grid-gutters($gutters, \\35 0\\25, 0.5);\r\n\t\t\t@include grid-gutters($gutters, \\32 5\\25, 0.25);\r\n\r\n\t\t// Cells.\r\n\t\t\t$x: '';\r\n\r\n\t\t\t@if $breakpointName {\r\n\t\t\t\t$x: '\\\\28' + $breakpointName + '\\\\29';\r\n\t\t\t}\r\n\r\n\t\t\t.\\31 2u#{$x}, .\\31 2u\\24#{$x} { width: 100%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 1u#{$x}, .\\31 1u\\24#{$x} { width: 91.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 0u#{$x}, .\\31 0u\\24#{$x} { width: 83.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\39 u#{$x}, .\\39 u\\24#{$x} { width: 75%; clear: none; margin-left: 0; }\r\n\t\t\t.\\38 u#{$x}, .\\38 u\\24#{$x} { width: 66.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\37 u#{$x}, .\\37 u\\24#{$x} { width: 58.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\36 u#{$x}, .\\36 u\\24#{$x} { width: 50%; clear: none; margin-left: 0; }\r\n\t\t\t.\\35 u#{$x}, .\\35 u\\24#{$x} { width: 41.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\34 u#{$x}, .\\34 u\\24#{$x} { width: 33.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\33 u#{$x}, .\\33 u\\24#{$x} { width: 25%; clear: none; margin-left: 0; }\r\n\t\t\t.\\32 u#{$x}, .\\32 u\\24#{$x} { width: 16.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 u#{$x}, .\\31 u\\24#{$x} { width: 8.3333333333%; clear: none; margin-left: 0; }\r\n\r\n\t\t\t.\\31 2u\\24#{$x} + *,\r\n\t\t\t.\\31 1u\\24#{$x} + *,\r\n\t\t\t.\\31 0u\\24#{$x} + *,\r\n\t\t\t.\\39 u\\24#{$x} + *,\r\n\t\t\t.\\38 u\\24#{$x} + *,\r\n\t\t\t.\\37 u\\24#{$x} + *,\r\n\t\t\t.\\36 u\\24#{$x} + *,\r\n\t\t\t.\\35 u\\24#{$x} + *,\r\n\t\t\t.\\34 u\\24#{$x} + *,\r\n\t\t\t.\\33 u\\24#{$x} + *,\r\n\t\t\t.\\32 u\\24#{$x} + *,\r\n\t\t\t.\\31 u\\24#{$x} + * {\r\n\t\t\t\tclear: left;\r\n\t\t\t}\r\n\r\n\t\t\t.\\-11u#{$x} { margin-left: 91.6666666667% }\r\n\t\t\t.\\-10u#{$x} { margin-left: 83.3333333333% }\r\n\t\t\t.\\-9u#{$x} { margin-left: 75% }\r\n\t\t\t.\\-8u#{$x} { margin-left: 66.6666666667% }\r\n\t\t\t.\\-7u#{$x} { margin-left: 58.3333333333% }\r\n\t\t\t.\\-6u#{$x} { margin-left: 50% }\r\n\t\t\t.\\-5u#{$x} { margin-left: 41.6666666667% }\r\n\t\t\t.\\-4u#{$x} { margin-left: 33.3333333333% }\r\n\t\t\t.\\-3u#{$x} { margin-left: 25% }\r\n\t\t\t.\\-2u#{$x} { margin-left: 16.6666666667% }\r\n\t\t\t.\\-1u#{$x} { margin-left: 8.3333333333% }\r\n\r\n\t}\r\n\r\n\t/// Utility mixin for grid.\r\n\t/// @param {list} $gutters Gutters.\r\n\t/// @param {string} $class Optional class name.\r\n\t/// @param {integer} $multiplier Multiplier (default is 1).\r\n\t@mixin grid-gutters($gutters, $class: null, $multiplier: 1) {\r\n\r\n\t\t// Expand gutters if it's not a list.\r\n\t\t\t@if length($gutters) == 1 {\r\n\t\t\t\t$gutters: ($gutters, 0);\r\n\t\t\t}\r\n\r\n\t\t// Get column and row gutter values.\r\n\t\t\t$c: nth($gutters, 1);\r\n\t\t\t$r: nth($gutters, 2);\r\n\r\n\t\t// Get class (if provided).\r\n\t\t\t$x: '';\r\n\r\n\t\t\t@if $class {\r\n\t\t\t\t$x: '.' + $class;\r\n\t\t\t}\r\n\r\n\t\t// Default.\r\n\t\t\t.row#{$x} > * { padding: ($r * $multiplier) 0 0 ($c * $multiplier); }\r\n\t\t\t.row#{$x} { margin: ($r * $multiplier * -1) 0 -1px ($c * $multiplier * -1); }\r\n\r\n\t\t// Uniform.\r\n\t\t\t.row.uniform#{$x} > * { padding: ($c * $multiplier) 0 0 ($c * $multiplier); }\r\n\t\t\t.row.uniform#{$x} { margin: ($c * $multiplier * -1) 0 -1px ($c * $multiplier * -1); }\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in vendorized keyframe blocks.\r\n\t/// @param {string} $name Name.\r\n\t@mixin keyframes($name) {\r\n\r\n\t\t@-moz-keyframes #{$name} { @content; }\r\n\t\t@-webkit-keyframes #{$name} { @content; }\r\n\t\t@-ms-keyframes #{$name} { @content; }\r\n\t\t@keyframes #{$name} { @content; }\r\n\r\n\t}\r\n\r\n\t///\r\n\t/// Sets breakpoints.\r\n\t/// @param {map} $x Breakpoints.\r\n\t///\r\n\t@mixin skel-breakpoints($x: ()) {\r\n\t\t$breakpoints: $x !global;\r\n\t}\r\n\r\n\t///\r\n\t/// Initializes layout module.\r\n\t/// @param {map} config Config.\r\n\t///\r\n\t@mixin skel-layout($config: ()) {\r\n\r\n\t\t// Config.\r\n\t\t\t$configPerBreakpoint: ();\r\n\r\n\t\t\t$z: map-get($config, 'breakpoints');\r\n\r\n\t\t\t@if $z {\r\n\t\t\t\t$configPerBreakpoint: $z;\r\n\t\t\t}\r\n\r\n\t\t// Reset.\r\n\t\t\t$x: map-get($config, 'reset');\r\n\r\n\t\t\t@if $x {\r\n\r\n\t\t\t\t/* Reset */\r\n\r\n\t\t\t\t@include reset($x);\r\n\r\n\t\t\t}\r\n\r\n\t\t// Box model.\r\n\t\t\t$x: map-get($config, 'boxModel');\r\n\r\n\t\t\t@if $x {\r\n\r\n\t\t\t\t/* Box Model */\r\n\r\n\t\t\t\t@include boxModel($x);\r\n\r\n\t\t\t}\r\n\r\n\t\t// Containers.\r\n\t\t\t$containers: map-get($config, 'containers');\r\n\r\n\t\t\t@if $containers {\r\n\r\n\t\t\t\t/* Containers */\r\n\r\n\t\t\t\t.container {\r\n\t\t\t\t\tmargin-left: auto;\r\n\t\t\t\t\tmargin-right: auto;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Use default is $containers is just \"true\".\r\n\t\t\t\t\t@if $containers == true {\r\n\t\t\t\t\t\t$containers: 960px;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Apply base.\r\n\t\t\t\t\t@include containers($containers);\r\n\r\n\t\t\t\t// Apply per-breakpoint.\r\n\t\t\t\t\t@each $name in map-keys($breakpoints) {\r\n\r\n\t\t\t\t\t\t// Get/use breakpoint setting if it exists.\r\n\t\t\t\t\t\t\t$x: map-get($configPerBreakpoint, $name);\r\n\r\n\t\t\t\t\t\t\t// Per-breakpoint config exists?\r\n\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t$y: map-get($x, 'containers');\r\n\r\n\t\t\t\t\t\t\t\t\t// Setting exists? Use it.\r\n\t\t\t\t\t\t\t\t\t\t@if $y {\r\n\t\t\t\t\t\t\t\t\t\t\t$containers: $y;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Create @media block.\r\n\t\t\t\t\t\t\t@media screen and #{map-get($breakpoints, $name)} {\r\n\t\t\t\t\t\t\t\t@include containers($containers);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t// Grid.\r\n\t\t\t$grid: map-get($config, 'grid');\r\n\r\n\t\t\t@if $grid {\r\n\r\n\t\t\t\t/* Grid */\r\n\r\n\t\t\t\t// Use defaults if $grid is just \"true\".\r\n\t\t\t\t\t@if $grid == true {\r\n\t\t\t\t\t\t$grid: ();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Sub-setting: Gutters.\r\n\t\t\t\t\t$grid-gutters: 40px;\r\n\t\t\t\t\t$x: map-get($grid, 'gutters');\r\n\r\n\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t$grid-gutters: $x;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Rows.\r\n\t\t\t\t\t.row {\r\n\t\t\t\t\t\tborder-bottom: solid 1px transparent;\r\n\t\t\t\t\t\t-moz-box-sizing: border-box;\r\n\t\t\t\t\t\t-webkit-box-sizing: border-box;\r\n\t\t\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row > * {\r\n\t\t\t\t\t\tfloat: left;\r\n\t\t\t\t\t\t-moz-box-sizing: border-box;\r\n\t\t\t\t\t\t-webkit-box-sizing: border-box;\r\n\t\t\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row:after, .row:before {\r\n\t\t\t\t\t\tcontent: '';\r\n\t\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\t\tclear: both;\r\n\t\t\t\t\t\theight: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row.uniform > * > :first-child {\r\n\t\t\t\t\t\tmargin-top: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row.uniform > * > :last-child {\r\n\t\t\t\t\t\tmargin-bottom: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Gutters (0%).\r\n\t\t\t\t\t@include grid-gutters($grid-gutters, \\30 \\25, 0);\r\n\r\n\t\t\t\t// Apply base.\r\n\t\t\t\t\t@include grid($grid-gutters);\r\n\r\n\t\t\t\t// Apply per-breakpoint.\r\n\t\t\t\t\t@each $name in map-keys($breakpoints) {\r\n\r\n\t\t\t\t\t\t// Get/use breakpoint setting if it exists.\r\n\t\t\t\t\t\t\t$x: map-get($configPerBreakpoint, $name);\r\n\r\n\t\t\t\t\t\t\t// Per-breakpoint config exists?\r\n\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t$y: map-get($x, 'grid');\r\n\r\n\t\t\t\t\t\t\t\t\t// Setting exists?\r\n\t\t\t\t\t\t\t\t\t\t@if $y {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Sub-setting: Gutters.\r\n\t\t\t\t\t\t\t\t\t\t\t\t$x: map-get($y, 'gutters');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$grid-gutters: $x;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Create @media block.\r\n\t\t\t\t\t\t\t@media screen and #{map-get($breakpoints, $name)} {\r\n\t\t\t\t\t\t\t\t@include grid($grid-gutters, $name);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t}\r\n\r\n\t/// Resets browser styles.\r\n\t/// @param {string} $mode Mode (default is 'normalize').\r\n\t@mixin reset($mode: 'normalize') {\r\n\r\n\t\t@if $mode == 'normalize' {\r\n\r\n\t\t\t// normalize.css v3.0.2 | MIT License | git.io/normalize\r\n\t\t\t\thtml{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\r\n\r\n\t\t}\r\n\t\t@else if $mode == 'full' {\r\n\r\n\t\t\t// meyerweb.com/eric/tools/css/reset v2.0 | 20110126 | License: none (public domain)\r\n\t\t\t\thtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block;}body{line-height:1;}ol,ul{list-style:none;}blockquote,q{quotes:none;}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none;}table{border-collapse:collapse;border-spacing:0;}body{-webkit-text-size-adjust:none}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/// Vendorizes a declaration's property and/or value(s).\r\n\t/// @param {string} $property Property.\r\n\t/// @param {mixed} $value String/list of value(s).\r\n\t@mixin vendor($property, $value) {\r\n\r\n\t\t// Determine if property should expand.\r\n\t\t\t$expandProperty: index($vendor-properties, $property);\r\n\r\n\t\t// Determine if value should expand (and if so, add '-prefix-' placeholder).\r\n\t\t\t$expandValue: false;\r\n\r\n\t\t\t@each $x in $value {\r\n\t\t\t\t@each $y in $vendor-values {\r\n\t\t\t\t\t@if $y == str-slice($x, 1, str-length($y)) {\r\n\r\n\t\t\t\t\t\t$value: set-nth($value, index($value, $x), '-prefix-' + $x);\r\n\t\t\t\t\t\t$expandValue: true;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Expand property?\r\n\t\t\t@if $expandProperty {\r\n\t\t\t    @each $vendor in $vendor-prefixes {\r\n\t\t\t        #{$vendor}#{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\r\n\t\t\t    }\r\n\t\t\t}\r\n\r\n\t\t// Expand just the value?\r\n\t\t\t@elseif $expandValue {\r\n\t\t\t    @each $vendor in $vendor-prefixes {\r\n\t\t\t        #{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\r\n\t\t\t    }\r\n\t\t\t}\r\n\r\n\t\t// Neither? Treat them as a normal declaration.\r\n\t\t\t@else {\r\n\t\t        #{$property}: #{$value};\r\n\t\t\t}\r\n\r\n\t}","/// Makes an element's :before pseudoelement a FontAwesome icon.\r\n/// @param {string} $content Optional content value to use.\r\n@mixin icon($content: false) {\r\n\r\n\ttext-decoration: none;\r\n\r\n\t&:before {\r\n\r\n\t\t@if $content {\r\n\t\t\tcontent: $content;\r\n\t\t}\r\n\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\tfont-family: FontAwesome;\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: normal;\r\n\t\ttext-transform: none !important;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/// Applies padding to an element, taking the current element-margin value into account.\r\n/// @param {mixed} $tb Top/bottom padding.\r\n/// @param {mixed} $lr Left/right padding.\r\n/// @param {list} $pad Optional extra padding (in the following order top, right, bottom, left)\r\n/// @param {bool} $important If true, adds !important.\r\n@mixin padding($tb, $lr, $pad: (0,0,0,0), $important: null) {\r\n\r\n\t@if $important {\r\n\t\t$important: '!important';\r\n\t}\r\n\r\n\tpadding: ($tb + nth($pad,1)) ($lr + nth($pad,2)) max(0.1em, $tb - _size(element-margin) + nth($pad,3)) ($lr + nth($pad,4)) #{$important};\r\n\r\n}\r\n\r\n/// Encodes a SVG data URL so IE doesn't choke (via codepen.io/jakob-e/pen/YXXBrp).\r\n/// @param {string} $svg SVG data URL.\r\n/// @return {string} Encoded SVG data URL.\r\n@function svg-url($svg) {\r\n\r\n    $svg: str-replace($svg, '\"', '\\'');\r\n    $svg: str-replace($svg, '<', '%3C');\r\n    $svg: str-replace($svg, '>', '%3E');\r\n    $svg: str-replace($svg, '&', '%26');\r\n    $svg: str-replace($svg, '#', '%23');\r\n\r\n    @return url(\"data:image/svg+xml;charset=utf8,#{$svg}\");\r\n\r\n}"],"sourceRoot":"/source/"}